@model IPagedList<LPBugTracker.Models.Project>
@using LPBugTracker.Helpers
@using LPBugTracker.Models
@using Microsoft.AspNet.Identity;
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    var ticketHelper = new TicketHelper();
    var roleHelper = new UserRolesHelper();
    var projHelper = new ProjectHelper();
    ApplicationDbContext db = new ApplicationDbContext();
    var userId = HttpContext.Current.User.Identity.GetUserId();
    var userTickets = db.Tickets.Where(t => t.AssignedUserId == userId);
    var count = 1;
}

<!-- page content -->
<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>My Projects</h3>
                @Html.ActionLink("View All Projects I'm Assigned To.", "AllProjectsIndex", null, new { @class = "btn btn-primary btn-sm" })
                @if (TempData["Message"] != null)
                {
                    <p>@TempData["Message"]</p>
                }
            </div>

            <div class="title_right">
                <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
                    @using (Html.BeginForm("Index", "Developer", FormMethod.Get, htmlAttributes: new { @class = "form" }))
                    {

                        <div class="input-group">
                            <input type="text" id="searchStr" name="searchStr" class="form-control" placeholder="Search for...">
                            <span class="input-group-btn">
                                <button class="btn btn-default" id="searchStr" name="searchStr" type="submit">Go!</button>
                            </span>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="x_panel">
            <div class="x_title">
                <h2>Dashboard</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="">
                    <div class="row text-center">
                        <div class="col-md-12">
                            <h3>Total Tickets Closed: <strong>@db.Tickets.Where(t => t.Status.Name == "Resolved" && t.AssignedUserId == userId).Count()</strong></h3>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            Show a list of the user's tickets.
                            <table id="devTicketTable" class="table table-condensed jq-data">
                                <thead>
                                    <tr>
                                        <th>Project <i class="fa fa-long-arrow-right"></i> Ticket</th>
                                        <th>Priority</th>
                                        <th>Status</th>
                                        <th>Type</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ticket in userTickets)
                                    {
                                    <tr>
                                        <td><a href="@Url.Action("Details", "Tickets", new {id = ticket.Id })">@ticket.Project.Name
                                            <br /><i class="fa fa-long-arrow-right"></i>@ticket.Title
                                            </a></td>
                                        <td>
                                            @if (ticket.Priority.Name == "None")
                                            {
                                                <button class="btn btn-sm btn-default">None</button>
                                            }
                                            else if (ticket.Priority.Name == "Low")
                                            {
                                                <button class="btn btn-sm btn-success">Low</button>
                                            }
                                            else if (ticket.Priority.Name == "Medium")
                                            {
                                                <button class="btn btn-sm btn-primary">Medium</button>
                                            }
                                            else if (ticket.Priority.Name == "High")
                                            {
                                                <button class="btn btn-sm btn-warning">High</button>
                                            }
                                            else if (ticket.Priority.Name == "Urgent")
                                            {
                                                <button class="btn btn-sm btn-danger">Urgent</button>
                                            }
                                        </td>
                                        <td>
                                            @if (ticket.Status.Name == "Unassigned")
                                            {
                                                <button class="btn btn-sm btn-danger">Unassigned</button>
                                            }
                                            else if (ticket.Status.Name == "Open")
                                            {
                                                <button class="btn btn-sm btn-primary">Open</button>
                                            }
                                            else if (ticket.Status.Name == "Resolved")
                                            {
                                                <button class="btn btn-sm btn-success">Closed</button>
                                            }
                                            else if (ticket.Status.Name == "Need More Info")
                                            {
                                                <button class="btn btn-sm btn-warning">On Hold</button>
                                            }
                                        </td>
                                        <td>
                                            @if (ticket.Type.Name == "Bug")
                                            {
                                                <button class="btn btn-sm btn-danger">Bug</button>
                                            }
                                            else if (ticket.Type.Name == "Feature Request")
                                            {
                                                <button class="btn btn-sm btn-success">Feature</button>
                                            }
                                            else if (ticket.Type.Name == "Documentation")
                                            {
                                                <button class="btn btn-sm btn-warning">Documentation</button>
                                            }
                                            else if (ticket.Type.Name == "Other")
                                            {
                                                <button class="btn btn-sm btn-primary">Other</button>
                                            }
                                        </td>
                                    </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="col-md-2 col-md-offset-1">
                            <div class="row">
                                <!-- Urgent tickets -->
                                <div class="animated flipInY col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="tile-stats">
                                        <div class="icon"><i class="fa fa-warning"></i></div>
                                        <div class="count">@userTickets.Where(t => t.Status.Name != "Resolved" && (t.Priority.Name == "High" || t.Priority.Name == "Urgent")).Count()</div>
                                        <h3>Urgent Tickets</h3>
                                        <p>Tickets with a Priority of "High" or "Urgent"</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div id="leftChart" style="height:350px;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        @foreach (var project in Model)
        {

            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel collapsed">
                        <div class="x_title">
                            <h2>@project.Name</h2>
                            <ul class="nav navbar-right panel_toolbox">
                                <li>
                                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                </li>
                                <li>
                                    <a class="close-link"><i class="fa fa-close"></i></a>
                                </li>
                            </ul>
                            <div class="clearfix"></div>
                        </div>
                        <div class="x_content">

                            <div class="">

                                <div class="row top_tiles">
                                    <!-- Open tickets -->
                                    <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                        <div class="tile-stats">
                                            <div class="icon"><i class="fa fa-circle-o"></i></div>
                                            <div class="count">@project.Tickets.Where(t => t.Status.Name != "Resolved").Count()</div>
                                            <h3>Open Tickets</h3>
                                            <p>Unresolved Tickets</p>
                                        </div>
                                    </div>

                                    @if (ticketHelper.GetInfoNeededTickets(project.Id).Count() > 0)
                                    {
                                        <!-- Contact Needed tickets -->
                                        <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                            <div class="tile-stats">
                                                <div class="icon"><i class="fa fa-phone"></i></div>
                                                <div class="count">@ticketHelper.GetInfoNeededTickets(project.Id).Count()</div>
                                                <h3>Client Contact Necessary</h3>
                                                <p>More info needed form the client for progress.</p>
                                            </div>
                                        </div>
                                    }

                                    @if (ticketHelper.GetUrgentTickets(project.Id).Count() > 0)
                                    {
                                        <!-- Urgent tickets -->
                                        <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                                            <div class="tile-stats">
                                                <div class="icon"><i class="fa fa-warning"></i></div>
                                                <div class="count">@ticketHelper.GetUrgentTickets(project.Id).Count()</div>
                                                <h3>Urgent Tickets</h3>
                                                <p>Tickets with an "Urgent" or "High" priority.</p>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <div class="row">


                                    <table class="table table-striped table-bordered dt-responsive nowrap jq-data" id="ticketTable@(count)" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>

                                                <th style="width: 20%">Project Name</th>
                                                <th>Submitter</th>
                                                <th>Developer</th>
                                                <th>Status</th>
                                                <th>Request Type</th>
                                                <th>Priority</th>
                                                <th style="width: 20%">#Edit</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var ticket in project.Tickets)
                                            {
                                                <tr>
                                                    <td>
                                                        <a>@ticket.Title</a>
                                                        <br />
                                                        <small>Created @ticket.Created</small>
                                                    </td>
                                                    <td>
                                                        <img src="@ticket.OwnerUser.AvatarPath" class="avatar" alt="Avatar" />
                                                        <br />
                                                        <small>@ticket.OwnerUser.FullName</small>
                                                    </td>
                                                    @if (ticket.AssignedUserId != null)
                                                    {
                                                        <td>
                                                            <img src="@ticket.AssignedUser.AvatarPath" class="avatar" alt="Avatar" />
                                                            <br />
                                                            <small>@ticket.AssignedUser.FullName</small>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td></td>
                                                    }
                                                    <td>
                                                        @if (ticket.Status.Name == "Unassigned")
                                                        {
                                                            <button class="btn btn-sm btn-danger">Unassigned</button>
                                                        }
                                                        else if (ticket.Status.Name == "Open")
                                                        {
                                                            <button class="btn btn-sm btn-primary">Open</button>
                                                        }
                                                        else if (ticket.Status.Name == "Resolved")
                                                        {
                                                            <button class="btn btn-sm btn-success">Closed</button>
                                                        }
                                                        else if (ticket.Status.Name == "Need More Info")
                                                        {
                                                            <button class="btn btn-sm btn-warning">Contact Needed</button>
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (ticket.Type.Name == "Bug")
                                                        {
                                                            <button class="btn btn-sm btn-danger">Bug</button>
                                                        }
                                                        else if (ticket.Type.Name == "Feature Request")
                                                        {
                                                            <button class="btn btn-sm btn-success">Feature Request</button>
                                                        }
                                                        else if (ticket.Type.Name == "Documentation")
                                                        {
                                                            <button class="btn btn-sm btn-warning">Documentation</button>
                                                        }
                                                        else if (ticket.Type.Name == "Other")
                                                        {
                                                            <button class="btn btn-sm btn-primary">Other</button>
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (ticket.Priority.Name == "None")
                                                        {
                                                            <button class="btn btn-sm btn-default">None</button>
                                                        }
                                                        else if (ticket.Priority.Name == "Low")
                                                        {
                                                            <button class="btn btn-sm btn-success">Low</button>
                                                        }
                                                        else if (ticket.Priority.Name == "Medium")
                                                        {
                                                            <button class="btn btn-sm btn-primary">Medium</button>
                                                        }
                                                        else if (ticket.Priority.Name == "High")
                                                        {
                                                            <button class="btn btn-sm btn-warning">High</button>
                                                        }
                                                        else if (ticket.Priority.Name == "Urgent")
                                                        {
                                                            <button class="btn btn-sm btn-danger">Urgent</button>
                                                        }
                                                    </td>
                                                    <!-- These don't do anything yet. -->

                                                    <td>
                                                        @if (HttpContext.Current.User.Identity.GetUserId() == ticket.AssignedUserId)
                                                        {
                                                            <a href="@Url.Action("Details", "Tickets", new { id = ticket.Id })" class="btn btn-primary btn-xs"><i class="fa fa-folder"></i> View </a>
                                                        }
                                                    </td>


                                                </tr>
                                            }
                                        </tbody>
                                    </table>


                                </div>

                            </div>


                        </div>
                    </div>
                </div>
            </div>
            count++;
        }
        <div class="row text-center">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
        </div>
    </div>
</div>
<!-- /page content -->
<!-- footer content -->
<footer>
    <div class="pull-right">
        A Lukas Parsons Portfolio Project. (2019)
    </div>
    <div class="clearfix"></div>
</footer>
<!-- /footer content -->
@section scripts{
<script>

    if ($('#leftChart').length) {
        var theme = {
            color: [
                '#34495E', '#26B99A', '#3498DB', '#9B59B6',
                '#BDC3C7', '#8abb6f', '#759c6a', '#bfd3b7'
            ],

            title: {
                itemGap: 8,
                textStyle: {
                    fontWeight: 'normal',
                    color: '#408829'
                }
            },

            dataRange: {
                color: ['#1f610a', '#97b58d']
            },

            toolbox: {
                color: ['#408829', '#408829', '#408829', '#408829']
            },

            tooltip: {
                backgroundColor: 'rgba(0,0,0,0.5)',
                axisPointer: {
                    type: 'line',
                    lineStyle: {
                        color: '#408829',
                        type: 'dashed'
                    },
                    crossStyle: {
                        color: '#408829'
                    },
                    shadowStyle: {
                        color: 'rgba(200,200,200,0.3)'
                    }
                }
            },

            dataZoom: {
                dataBackgroundColor: '#eee',
                fillerColor: 'rgba(64,136,41,0.2)',
                handleColor: '#408829'
            },
            grid: {
                borderWidth: 0
            },

            categoryAxis: {
                axisLine: {
                    lineStyle: {
                        color: '#408829'
                    }
                },
                splitLine: {
                    lineStyle: {
                        color: ['#eee']
                    }
                }
            },

            valueAxis: {
                axisLine: {
                    lineStyle: {
                        color: '#408829'
                    }
                },
                splitArea: {
                    show: true,
                    areaStyle: {
                        color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
                    }
                },
                splitLine: {
                    lineStyle: {
                        color: ['#eee']
                    }
                }
            },
            timeline: {
                lineStyle: {
                    color: '#408829'
                },
                controlStyle: {
                    normal: { color: '#408829' },
                    emphasis: { color: '#408829' }
                }
            },

            k: {
                itemStyle: {
                    normal: {
                        color: '#68a54a',
                        color0: '#a9cba2',
                        lineStyle: {
                            width: 1,
                            color: '#408829',
                            color0: '#86b379'
                        }
                    }
                }
            },
            map: {
                itemStyle: {
                    normal: {
                        areaStyle: {
                            color: '#ddd'
                        },
                        label: {
                            textStyle: {
                                color: '#c12e34'
                            }
                        }
                    },
                    emphasis: {
                        areaStyle: {
                            color: '#99d2dd'
                        },
                        label: {
                            textStyle: {
                                color: '#c12e34'
                            }
                        }
                    }
                }
            },
            force: {
                itemStyle: {
                    normal: {
                        linkStyle: {
                            strokeColor: '#408829'
                        }
                    }
                }
            },
            chord: {
                padding: 4,
                itemStyle: {
                    normal: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        },
                        chordStyle: {
                            lineStyle: {
                                width: 1,
                                color: 'rgba(128, 128, 128, 0.5)'
                            }
                        }
                    },
                    emphasis: {
                        lineStyle: {
                            width: 1,
                            color: 'rgba(128, 128, 128, 0.5)'
                        },
                        chordStyle: {
                            lineStyle: {
                                width: 1,
                                color: 'rgba(128, 128, 128, 0.5)'
                            }
                        }
                    }
                }
            },
            gauge: {
                startAngle: 225,
                endAngle: -45,
                axisLine: {
                    show: true,
                    lineStyle: {
                        color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
                        width: 8
                    }
                },
                axisTick: {
                    splitNumber: 10,
                    length: 12,
                    lineStyle: {
                        color: 'auto'
                    }
                },
                axisLabel: {
                    textStyle: {
                        color: 'auto'
                    }
                },
                splitLine: {
                    length: 18,
                    lineStyle: {
                        color: 'auto'
                    }
                },
                pointer: {
                    length: '90%',
                    color: 'auto'
                },
                title: {
                    textStyle: {
                        color: '#333'
                    }
                },
                detail: {
                    textStyle: {
                        color: 'auto'
                    }
                }
            },
            textStyle: {
                fontFamily: 'Arial, Verdana, sans-serif'
            }
        };
        var echartPie = echarts.init(document.getElementById('leftChart'), theme);
        var typeChartUrl = '@Url.Action("GetDevTicketTypes", "AjaxData")'
        $.post(typeChartUrl).then(function (response) {
            echartPie.setOption({
                title: {
                    text: 'Ticket Types',
                    left: 'center',
                    top: 20,
                    textStyle: {
                        color: '#73879C'
                    }
                },

                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br/>{b} : {c} ({d}%)"
                },
                legend: {
                    x: 'center',
                    y: 'bottom',
                    data: ['Bug', 'Documentation', 'Feature Request', 'Other']
                },
                toolbox: {
                    show: true,
                    feature: {
                        magicType: {
                            show: true,
                            type: ['pie', 'funnel'],
                            option: {
                                funnel: {
                                    x: '25%',
                                    width: '50%',
                                    funnelAlign: 'left',
                                    max: 1548
                                }
                            }
                        },
                        restore: {
                            show: true,
                            title: "Restore"
                        },
                        saveAsImage: {
                            show: true,
                            title: "Save Image"
                        }
                    }
                },
                calculable: true,
                series: [{
                    name: 'Ticket Types',
                    type: 'pie',
                    radius: '55%',
                    center: ['50%', '48%'],
                    data: response
                }]
            });

        })
    }


</script>
    }
